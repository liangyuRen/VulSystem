package com.nju.backend.repository.po;

import com.baomidou.mybatisplus.annotation.IdType;
import com.baomidou.mybatisplus.annotation.TableField;
import com.baomidou.mybatisplus.annotation.TableId;
import com.baomidou.mybatisplus.annotation.TableName;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.nju.backend.config.vo.VulnerabilityReportVO;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

import java.io.Serializable;
import java.util.Date;

@Data
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(callSuper = false)
@JsonIgnoreProperties(ignoreUnknown = true)
@TableName("vulnerability_report")
public class VulnerabilityReport implements Serializable {

    private static final long serialVersionUID = 1L;

    /**
     * 漏洞报告ID（主键，自增）
     */
    @TableId(value = "id", type = IdType.AUTO)
    private Integer id;

    /**
     * 漏洞cve_id
     */
    @TableField("cve_id")
    private String cveId;

    /**
     * 漏洞描述
     */
    @TableField("description")
    private String description;

    /**
     * 漏洞名称
     */
    @TableField("vulnerability_name")
    @JsonProperty("vulnerabilityName")
    private String vulnerabilityName;

    /**
     * 披露时间
     */
    @TableField("disclosure_time")
    @JsonFormat(pattern = "yyyy-MM-dd", timezone = "Asia/Shanghai")
    private Date disclosureTime;

    /**
     * 风险等级（如：低、中、高、严重）
     */
    @TableField("riskLevel")
    private String riskLevel;

    /**
     * 参考链接
     */
    @TableField("referenceLink")
    private String referenceLink;

    /**
     * 是否影响了某公司白名单（1：是，0：否）
     */
    @TableField("affects_whitelist")
    private Integer affectsWhitelist;

    /**
     * 是否删除（1：是，0：否）
     */
    @TableField("isDelete")
    private Integer isDelete;

    public VulnerabilityReportVO toVO(){
        return new VulnerabilityReportVO(id, cveId, vulnerabilityName, description, disclosureTime, riskLevel, referenceLink, affectsWhitelist );
    }
}